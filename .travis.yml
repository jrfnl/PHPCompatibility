sudo: false

language: php

matrix:
  fast_finish: true
  include:

    - php: 5.2
      env: PHPCS_VERSION="1.5.6"
    - php: 5.2
      env: PHPCS_VERSION="master"

    - php: 5.3
      env: PHPCS_VERSION=">=1.5.1,<2.0"
    - php: 5.3
      env: PHPCS_VERSION=">=2.0"

    - php: 5.4
      env: PHPCS_VERSION=">=1.5.1,<2.0"
    - php: 5.4
      env: PHPCS_VERSION=">=2.0"

    - php: 5.5
      env: PHPCS_VERSION=">=1.5.1,<2.0"
    - php: 5.5
      env: PHPCS_VERSION=">=2.0"
    - php: 5.5
      env: PHPCS_VERSION="dev-master"

    - php: 5.6
      env: PHPCS_VERSION=">=1.5.1,<2.0"
    - php: 5.6
      env: PHPCS_VERSION=">=2.0"
    - php: 5.6
      env: PHPCS_VERSION="dev-master"

    - php: 7.0
      env: PHPCS_VERSION=">=1.5.1,<2.0"
    - php: 7.0
      env: PHPCS_VERSION=">=2.0"
    - php: 7.0
      env: PHPCS_VERSION="dev-master"

    - php: 7.1
      env: PHPCS_VERSION=">=1.5.1,<2.0"
    - php: 7.1
      env: PHPCS_VERSION=">=2.0"
    - php: 7.1
      env: PHPCS_VERSION="dev-master"


before_script:
  - phpenv rehash

install:
  - if [[ $TRAVIS_PHP_VERSION > "5.2" ]]; then composer self-update; fi
  - if [[ $TRAVIS_PHP_VERSION > "5.2" ]]; then composer require squizlabs/php_codesniffer:${PHPCS_VERSION}; fi
  - if [[ $TRAVIS_PHP_VERSION > "5.2" ]]; then composer install; fi
  - if [[ $TRAVIS_PHP_VERSION < "5.3" ]]; then export PHPCS_DIR=/tmp/phpcs; fi
  - if [[ $TRAVIS_PHP_VERSION < "5.3" ]]; then export PHPCS_BIN=$(if [[ $PHPCS_VERSION == 3.0 ]]; then echo $PHPCS_DIR/bin/phpcs; else echo $PHPCS_DIR/scripts/phpcs; fi); fi
  - if [[ $TRAVIS_PHP_VERSION < "5.3" ]]; then mkdir -p $PHPCS_DIR && git clone --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git -b $PHPCS_VERSION $PHPCS_DIR; fi
  - if [[ $TRAVIS_PHP_VERSION < "5.3" ]]; then $PHPCS_BIN --config-set installed_paths $(pwd); fi

script:
  - if [[ $TRAVIS_PHP_VERSION > "5.2" ]]; then find -L . -path ./Tests/sniff-examples -prune -o -path ./vendor -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l; fi
  - if [[ $TRAVIS_PHP_VERSION < "5.3" ]]; then find -L . -path ./Scripts -prune -o -path ./Tests/sniff-examples -prune -o -path ./vendor -prune -o -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l; fi
  - phpunit --configuration phpunit.xml
